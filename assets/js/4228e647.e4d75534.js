"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9297],{56:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"usage/structuring-reducers/prerequisite-concepts","title":"Prerequisite Concepts","description":"Structuring Reducers > Prerequisite Concepts: Key concepts to understand when using Redux","source":"@site/../docs/usage/structuring-reducers/PrerequisiteConcepts.md","sourceDirName":"usage/structuring-reducers","slug":"/usage/structuring-reducers/prerequisite-concepts","permalink":"/usage/structuring-reducers/prerequisite-concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/reduxjs/redux/edit/master/website/../docs/usage/structuring-reducers/PrerequisiteConcepts.md","tags":[],"version":"current","lastUpdatedAt":1747212223000,"frontMatter":{"id":"prerequisite-concepts","title":"Prerequisite Concepts","sidebar_label":"Prerequisite Concepts","description":"Structuring Reducers > Prerequisite Concepts: Key concepts to understand when using Redux"},"sidebar":"docs","previous":{"title":"Structuring Reducers","permalink":"/usage/structuring-reducers/structuring-reducers"},"next":{"title":"Basic Reducer Structure","permalink":"/usage/structuring-reducers/basic-reducer-structure"}}');var s=t(4848),r=t(8453);const a={id:"prerequisite-concepts",title:"Prerequisite Concepts",sidebar_label:"Prerequisite Concepts",description:"Structuring Reducers > Prerequisite Concepts: Key concepts to understand when using Redux"},c="Prerequisite Reducer Concepts",d={},o=[{value:"Note on immutability, side effects, and mutation",id:"note-on-immutability-side-effects-and-mutation",level:5},{value:"Redux Reducer Basics",id:"redux-reducer-basics",level:4},{value:"Pure Functions and Side Effects",id:"pure-functions-and-side-effects",level:4},{value:"Immutable Data Management",id:"immutable-data-management",level:4},{value:"Normalizing Data",id:"normalizing-data",level:4}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"prerequisite-reducer-concepts",children:"Prerequisite Reducer Concepts"})}),"\n",(0,s.jsxs)(n.p,{children:["As described in ",(0,s.jsx)(n.a,{href:"/tutorials/fundamentals/part-3-state-actions-reducers",children:'"Redux Fundamentals" Part 3: State, Actions, and Reducers'}),", a Redux reducer function:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Should have a signature of ",(0,s.jsx)(n.code,{children:"(previousState, action) => newState"}),", similar to the type of function you would pass to ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce",children:(0,s.jsx)(n.code,{children:"Array.prototype.reduce(reducer, ?initialValue)"})})]}),"\n",(0,s.jsxs)(n.li,{children:['Should be "pure", which means the reducer:',"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Does not ",(0,s.jsx)(n.em,{children:"perform side effects"})," (such as calling API's or modifying non-local objects or variables)."]}),"\n",(0,s.jsxs)(n.li,{children:["Does not ",(0,s.jsx)(n.em,{children:"call non-pure functions"})," (like ",(0,s.jsx)(n.code,{children:"Date.now"})," or ",(0,s.jsx)(n.code,{children:"Math.random"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Does not ",(0,s.jsx)(n.em,{children:"mutate"})," its arguments. If the reducer updates state, it should not ",(0,s.jsx)(n.em,{children:"modify"})," the ",(0,s.jsx)(n.strong,{children:"existing"})," state object in-place. Instead, it should generate a ",(0,s.jsx)(n.strong,{children:"new"})," object containing the necessary changes. The same approach should be used for any sub-objects within state that the reducer updates."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.h5,{id:"note-on-immutability-side-effects-and-mutation",children:"Note on immutability, side effects, and mutation"}),"\n",(0,s.jsxs)(n.p,{children:["Mutation is discouraged because it generally breaks time-travel debugging, and React Redux's ",(0,s.jsx)(n.code,{children:"connect"})," function:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For time traveling, the Redux DevTools expect that replaying recorded actions would output a state value, but not change anything else. ",(0,s.jsx)(n.strong,{children:"Side effects like mutation or asynchronous behavior will cause time travel to alter behavior between steps, breaking the application"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["For React Redux, ",(0,s.jsx)(n.code,{children:"connect"})," checks to see if the props returned from a ",(0,s.jsx)(n.code,{children:"mapStateToProps"})," function have changed in order to determine if a component needs to update. To improve performance, ",(0,s.jsx)(n.code,{children:"connect"})," takes some shortcuts that rely on the state being immutable, and uses shallow reference equality checks to detect changes. This means that ",(0,s.jsx)(n.strong,{children:"changes made to objects and arrays by direct mutation will not be detected, and components will not re-render"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Other side effects like generating unique IDs or timestamps in a reducer also make the code unpredictable and harder to debug and test."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Because of these rules, it's important that the following core concepts are fully understood before moving on to other specific techniques for organizing Redux reducers:"}),"\n",(0,s.jsx)(n.h4,{id:"redux-reducer-basics",children:"Redux Reducer Basics"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Key concepts"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Thinking in terms of state and state shape"}),"\n",(0,s.jsxs)(n.li,{children:["Delegating update responsibility by slice of state (",(0,s.jsx)(n.em,{children:"reducer composition"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Higher order reducers"}),"\n",(0,s.jsx)(n.li,{children:"Defining reducer initial state"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Reading list"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/tutorials/fundamentals/part-3-state-actions-reducers",children:'"Redux Fundamentals" Part 3: State, Actions, and Reducers'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/usage/reducing-boilerplate",children:"Redux Docs: Reducing Boilerplate"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/usage/implementing-undo-history",children:"Redux Docs: Implementing Undo History"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"/api/combinereducers",children:["Redux Docs: ",(0,s.jsx)(n.code,{children:"combineReducers"})]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://slides.com/omnidan/hor#/",children:"The Power of Higher-Order Reducers"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"https://stackoverflow.com/questions/33749759/read-stores-initial-state-in-redux-reducer",children:["Stack Overflow: Store initial state and ",(0,s.jsx)(n.code,{children:"combineReducers"})]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"https://stackoverflow.com/questions/35667775/state-in-redux-react-app-has-a-property-with-the-name-of-the-reducer",children:["Stack Overflow: State key names and ",(0,s.jsx)(n.code,{children:"combineReducers"})]})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pure-functions-and-side-effects",children:"Pure Functions and Side Effects"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Side effects"}),"\n",(0,s.jsx)(n.li,{children:"Pure functions"}),"\n",(0,s.jsx)(n.li,{children:"How to think in terms of combining functions"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Reading List"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"http://jaysoo.ca/2016/01/13/functional-programming-little-ideas/",children:"The Little Idea of Functional Programming"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://c2fo.io/c2fo/programming/2016/05/11/understanding-programmatic-side-effects/",children:"Understanding Programmatic Side-Effects"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://youtu.be/e-5obm1G_FY",children:"Learning Functional Programming in Javascript"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.sitepoint.com/an-introduction-to-reasonably-pure-functional-programming/",children:"An Introduction to Reasonably Pure Functional Programming"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"immutable-data-management",children:"Immutable Data Management"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mutability vs immutability"}),"\n",(0,s.jsx)(n.li,{children:"Immutably updating objects and arrays safely"}),"\n",(0,s.jsx)(n.li,{children:"Avoiding functions and statements that mutate state"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Reading List"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://reactkungfu.com/2015/08/pros-and-cons-of-using-immutability-with-react-js/",children:"Pros and Cons of Using Immutability With React"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://wecodetheweb.com/2016/02/12/immutable-javascript-using-es6-and-beyond/",children:"Immutable Data using ES6 and Beyond"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"normalizing-data",children:"Normalizing Data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Database structure and organization"}),"\n",(0,s.jsx)(n.li,{children:"Splitting relational/nested data up into separate tables"}),"\n",(0,s.jsx)(n.li,{children:"Storing a single definition for a given item"}),"\n",(0,s.jsx)(n.li,{children:"Referring to items by IDs"}),"\n",(0,s.jsx)(n.li,{children:"Using objects keyed by item IDs as lookup tables, and arrays of IDs to track ordering"}),"\n",(0,s.jsx)(n.li,{children:"Associating items in relationships"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Reading List"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.essentialsql.com/get-ready-to-learn-sql-database-normalization-explained-in-simple-english/",children:"Database Normalization in Simple English"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://egghead.io/lessons/javascript-redux-normalizing-the-state-shape",children:"Idiomatic Redux: Normalizing the State Shape"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/paularmstrong/normalizr",children:"Normalizr Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://tonyhb.gitbooks.io/redux-without-profanity/content/normalizer.html",children:"Redux Without Profanity: Normalizr"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://medium.com/@adamrackis/querying-a-redux-store-37db8c7f3b0f",children:"Querying a Redux Store"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Associative_entity",children:"Wikipedia: Associative Entity"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://web.csulb.edu/colleges/coe/cecs/dbdesign/dbdesign.php?page=manymany.php",children:"Database Design: Many-to-Many"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://medium.com/@talkol/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a",children:"Avoiding Accidental Complexity When Structuring Your App State"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);