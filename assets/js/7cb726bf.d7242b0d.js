"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3660],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=p(n),m=r,h=l["".concat(s,".").concat(m)]||l[m]||u[m]||a;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6164:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],c={id:"bindactioncreators",title:"bindActionCreators",hide_title:!0,description:"API > bindActionCreators: wrapping action creators for dispatching"},s=void 0,p={unversionedId:"api/bindactioncreators",id:"api/bindactioncreators",title:"bindActionCreators",description:"API > bindActionCreators: wrapping action creators for dispatching",source:"@site/../docs/api/bindActionCreators.md",sourceDirName:"api",slug:"/api/bindactioncreators",permalink:"/api/bindactioncreators",draft:!1,editUrl:"https://github.com/reduxjs/redux/edit/master/website/../docs/api/bindActionCreators.md",tags:[],version:"current",lastUpdatedAt:1716206711,formattedLastUpdatedAt:"May 20, 2024",frontMatter:{id:"bindactioncreators",title:"bindActionCreators",hide_title:!0,description:"API > bindActionCreators: wrapping action creators for dispatching"},sidebar:"docs",previous:{title:"applyMiddleware",permalink:"/api/applymiddleware"},next:{title:"compose",permalink:"/api/compose"}},d={},l=[{value:"Overview",id:"overview",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"<code>TodoActionCreators.js</code>",id:"todoactioncreatorsjs",level:4},{value:"<code>SomeComponent.js</code>",id:"somecomponentjs",level:4}],u={toc:l},m="wrapper";function h(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)(m,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bindactioncreatorsactioncreators-dispatch"},(0,a.kt)("inlineCode",{parentName:"h1"},"bindActionCreators(actionCreators, dispatch)")),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Turns an object whose values are ",(0,a.kt)("a",{parentName:"p",href:"/understanding/thinking-in-redux/glossary#action-creator"},"action creators"),", into an object with the same keys, but with every action creator wrapped into a ",(0,a.kt)("a",{parentName:"p",href:"/api/store#dispatchaction"},(0,a.kt)("inlineCode",{parentName:"a"},"dispatch"))," call so they may be invoked directly."),(0,a.kt)("p",null,"Normally you should just call ",(0,a.kt)("a",{parentName:"p",href:"/api/store#dispatchaction"},(0,a.kt)("inlineCode",{parentName:"a"},"dispatch"))," directly on your ",(0,a.kt)("a",{parentName:"p",href:"/api/store"},(0,a.kt)("inlineCode",{parentName:"a"},"Store"))," instance. If you use Redux with React, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gaearon/react-redux"},"react-redux")," will provide you with the ",(0,a.kt)("a",{parentName:"p",href:"/api/store#dispatchaction"},(0,a.kt)("inlineCode",{parentName:"a"},"dispatch"))," function so you can call it directly, too."),(0,a.kt)("p",null,"The only use case for ",(0,a.kt)("inlineCode",{parentName:"p"},"bindActionCreators")," is when you want to pass some action creators down to a component that isn't aware of Redux, and you don't want to pass ",(0,a.kt)("a",{parentName:"p",href:"/api/store#dispatchaction"},(0,a.kt)("inlineCode",{parentName:"a"},"dispatch"))," or the Redux store to it."),(0,a.kt)("p",null,"For convenience, you can also pass an action creator as the first argument, and get a dispatch wrapped function in return."),(0,a.kt)("admonition",{title:"Warning",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This was originally intended for use with the legacy React-Redux ",(0,a.kt)("inlineCode",{parentName:"p"},"connect")," method. It still works, but is rarely needed.")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"actionCreators")," (",(0,a.kt)("em",{parentName:"p"},"Function")," or ",(0,a.kt)("em",{parentName:"p"},"Object"),"): An ",(0,a.kt)("a",{parentName:"p",href:"/understanding/thinking-in-redux/glossary#action-creator"},"action creator"),", or an object whose values are action creators.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"dispatch")," (",(0,a.kt)("em",{parentName:"p"},"Function"),"): A ",(0,a.kt)("a",{parentName:"p",href:"/api/store#dispatchaction"},(0,a.kt)("inlineCode",{parentName:"a"},"dispatch"))," function available on the ",(0,a.kt)("a",{parentName:"p",href:"/api/store"},(0,a.kt)("inlineCode",{parentName:"a"},"Store"))," instance."))),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,"(",(0,a.kt)("em",{parentName:"p"},"Function")," or ",(0,a.kt)("em",{parentName:"p"},"Object"),"): An object mimicking the original object, but with each function immediately dispatching the action returned by the corresponding action creator. If you passed a function as ",(0,a.kt)("inlineCode",{parentName:"p"},"actionCreators"),", the return value will also be a single function."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("h4",{id:"todoactioncreatorsjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"TodoActionCreators.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export function addTodo(text) {\n  return {\n    type: 'ADD_TODO',\n    text\n  }\n}\n\nexport function removeTodo(id) {\n  return {\n    type: 'REMOVE_TODO',\n    id\n  }\n}\n")),(0,a.kt)("h4",{id:"somecomponentjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"SomeComponent.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as TodoActionCreators from './TodoActionCreators'\nconsole.log(TodoActionCreators)\n// {\n//   addTodo: Function,\n//   removeTodo: Function\n// }\n\nfunction TodoListContainer(props) {\n  // Injected by react-redux:\n  const { dispatch, todos } = props\n\n  // Here's a good use case for bindActionCreators:\n  // You want a child component to be completely unaware of Redux.\n  // We create bound versions of these functions now so we can\n  // pass them down to our child later.\n\n  const boundActionCreators = useMemo(\n    () => bindActionCreators(TodoActionCreators, dispatch),\n    [dispatch]\n  )\n  console.log(boundActionCreators)\n  // {\n  //   addTodo: Function,\n  //   removeTodo: Function\n  // }\n\n  useEffect(() => {\n    // Note: this won't work:\n    // TodoActionCreators.addTodo('Use Redux')\n\n    // You're just calling a function that creates an action.\n    // You must dispatch the action, too!\n\n    // This will work:\n    let action = TodoActionCreators.addTodo('Use Redux')\n    dispatch(action)\n  }, [])\n\n  return <TodoList todos={todos} {...this.boundActionCreators} />\n\n  // An alternative to bindActionCreators is to pass\n  // just the dispatch function down, but then your child component\n  // needs to import action creators and know about them.\n\n  // return <TodoList todos={todos} dispatch={dispatch} />\n}\n\nexport default connect(state => ({ todos: state.todos }))(TodoListContainer)\n")))}h.isMDXComponent=!0}}]);